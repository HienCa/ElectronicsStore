#pragma checksum "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5e8dd52976638c89c554e0e8828c8793561e2dba"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Cart), @"mvc.1.0.view", @"/Views/Home/Cart.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\_ViewImports.cshtml"
using ElectronicsStore;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\_ViewImports.cshtml"
using ElectronicsStore.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5e8dd52976638c89c554e0e8828c8793561e2dba", @"/Views/Home/Cart.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d5b5393bb9c64daa29820e07180089a8626bd590", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Cart : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("form-ordered"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "CreateForGuestMultiOrder", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Dondathang", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("form-ordered-authen"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "CreateForGuestMultiOrderAuthen", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
  
    Layout = "_Home";
    ElectronicsStoreContext _context = new ElectronicsStoreContext();

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"" rel=""stylesheet"">
<script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js""></script>

<style>
    .modal-dialog {
        max-width: none !important;
    }

    .gradient-custom {
        /* fallback for old browsers */
        background: #6a11cb;
        /* Chrome 10-25, Safari 5.1-6 */
        background: -webkit-linear-gradient(to right, rgba(106, 17, 203, 1), rgba(37, 117, 252, 1));
        /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
        background: linear-gradient(to right, rgb(203, 197, 213), rgb(209, 211, 213))
    }
</style>
<section class=""h-100 gradient-custom"">
    <div class=""pl-5 pr-5 py-3"">
        <div class=""row d-flex justify-content-center "" style=""margin-top:70px"">
            <div class=""col-md-7 mb-5 col-sm-12"">
                <div class=""card mb-4"" style=""height:85vh;overflow-y:scroll"">
                    <div class");
            WriteLiteral("=\"card-header py-3\">\r\n                        <h5 class=\"mb-0\">Đơn hàng - <span id=\"cart-list-count\"></span> sản phẩm</h5>\r\n                    </div>\r\n                    <div class=\"card-body\" id=\"cart-list\">\r\n");
#nullable restore
#line 32 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
                         if (TempData["success"] != null)
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <h3 class=\"text-success text-center\">");
#nullable restore
#line 34 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
                                                            Write(TempData["success"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h3>\r\n                            <p class=\"text-success text-center\">Mã đơn hàng của bạn là: ");
#nullable restore
#line 35 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
                                                                                   Write(TempData["Madh"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n                            <p class=\"text-success text-center\">Số điện thoại nhận hàng: ");
#nullable restore
#line 36 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
                                                                                    Write(TempData["Sdt"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n                            <p class=\"text-warning text-center\">Lưu ý: lưu lại mã đơn hàng để tiện theo dõi trạng thái đơn hàng vừa đặt.</p>\r\n");
#nullable restore
#line 38 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"col-md-5 col-sm-12\">\r\n");
#nullable restore
#line 44 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
                 if (ViewData["Info"] == null)
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5e8dd52976638c89c554e0e8828c8793561e2dba8465", async() => {
                WriteLiteral(@"

                        <div id=""myModal"" class=""modal fade "" tabindex=""-1"">
                            <div class=""modal-dialog"">
                                <div class=""modal-content container"">
                                    <div class=""modal-header"">
                                        <h5 class=""modal-title card-header"">Thông tin giao hàng</h5>
                                        <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal""></button>
                                    </div>
                                    <div class=""modal-body"">
                                        <div class=""   "">

                                            <div class=""col-md-12   bg-white"">
                                                <div class="" mb-4"">
                                                    <div class=""mb-3"">
                                                        <label for=""Tenkh"">Tên</label>
                                                        <i");
                WriteLiteral(@"nput id=""Tenkh"" type=""text"" class=""form-control"" name=""Tenkh"" required
                                                               maxlength=""255"" placeholder=""Họ tên nhận hàng"">
                                                    </div>
                                                    <div class=""mb-3"">
                                                        <label for=""Sdt"">Số điện thoại</label>
                                                        <input id=""Sdt"" type=""text"" class=""form-control"" name=""Sdt"" required maxlength=""255""
                                                               placeholder=""Số điện thoại nhận hàng"">
                                                    </div>
                                                    <div class=""mb-3"">
                                                        <label for=""Email"">Email</label>
                                                        <input id=""Email"" type=""email"" class=""form-control"" name=""Email""
                       ");
                WriteLiteral(@"                                        placeholder=""Email liên hệ"">
                                                    </div>
                                                    <div class=""mb-3"">
                                                        <label for=""Diachi"">Địa chỉ nhận hàng</label>
                                                        <textarea id=""Diachi"" type=""text"" class=""form-control"" name=""Diachi""
                                                                  maxlength=""4000"" required placeholder=""Địa chỉ nhận hàng""></textarea>
                                                    </div>
                                                    <div");
                BeginWriteAttribute("class", " class=\"", 4979, "\"", 4987, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                                        <label for=""Diachi"">Lưu ý</label>
                                                        <textarea type=""text"" class=""form-control"" id=""noidungphu"" name=""noidungphu""
                                                                  placeholder=""Lưu ý khi giao hàng""></textarea>
                                                    </div>


                                                </div>

                                            </div>

                                        </div>


                                        <div class=""modal-footer"">

                                            <a href=""#myModal"" role=""button"" class=""btn btn-secondary"" data-bs-toggle=""modal"">Hủy bỏ</a>
");
                WriteLiteral("                                            <button id=\"ordered-btn\" onclick=\"submitForm()\" disabled class=\"btn btn-primary\">\r\n                                                Đặt hàng\r\n                                            </button>\r\n");
                WriteLiteral(@"                                        </div>

                                    </div>

                                </div>
                            </div>
                        </div>
                        <input type=""hidden"" id=""cartItemsInput"" name=""cartItemsInput""");
                BeginWriteAttribute("value", " value=\"", 6768, "\"", 6776, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n\r\n                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 116 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
                }

#line default
#line hidden
#nullable disable
            WriteLiteral("                <div class=\"card mb-4\">\r\n                    <div class=\"card-body\">\r\n                        <p><strong>Hình thức thanh toán</strong></p>\r\n");
            WriteLiteral(@"                        <span class=""bg-light p-2 border-1"">Thanh toán khi nhận hàng</span>
                    </div>
                </div>

                <div class=""card mt-2"">
                    <div class=""card-header py-3"">
                        <h5 class=""mb-0"">Tổng đơn hàng</h5>
                    </div>
                    <div class=""card-body"">
                        <ul class=""list-group list-group-flush"">
                            <li class=""list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0"">
                                Tổng tiền
                                <span id=""totalAmount""></span>
                            </li>
                            <li class=""list-group-item d-flex justify-content-between align-items-center px-0"">
                                Shipping
                                <span>15.000 đ</span>
                            </li>
                            <li class=""list-group-item d-flex justify-");
            WriteLiteral("content-between align-items-center px-0\">\r\n                                Ngày giao dự kiến\r\n");
#nullable restore
#line 143 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
                                  
                                    DateTime Ngaygiaodukien = DateTime.Now;
                                    Ngaygiaodukien = Ngaygiaodukien.AddDays(3);
                                

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <span>\r\n                                    ");
#nullable restore
#line 148 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
                               Write(Ngaygiaodukien.ToString("dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                                </span>
                            </li>
                            <li class=""list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3"">
                                Số tiền cần trả (đã bao gồm VAT)
                                <span id=""totalAmountShip""><strong></strong></span>
                            </li>
                        </ul>
                        <div class=""d-flex justify-content-between align-items-center"">

                            <a href=""/Home/Index"" class=""btn btn-light "">Quay lại</a>

");
#nullable restore
#line 160 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
                             if (ViewData["isExist"] != null && ViewData["isExist"].Equals("Exist"))
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <button href=\"#InfoModal\" role=\"button\" disabled id=\"ordered-action-btn\" class=\"btn btn-primary\" data-bs-toggle=\"modal\">Tiến hành đặt hàng</button>\r\n");
#nullable restore
#line 163 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
                                                                                                                                                                             

                            }
                            else
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <button href=\"#myModal\" role=\"button\" disabled id=\"ordered-action-btn\" class=\"btn btn-primary\" data-bs-toggle=\"modal\">Tiến hành đặt hàng</button>\r\n");
#nullable restore
#line 169 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
                                                                                                                                                                           

                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n");
#nullable restore
#line 177 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
                 if (ViewData["Info"] != null)
                {
                    Khachhang thongtinkhachhang = ViewData["Info"] as Khachhang;


#line default
#line hidden
#nullable disable
            WriteLiteral("                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5e8dd52976638c89c554e0e8828c8793561e2dba19753", async() => {
                WriteLiteral("\r\n                        <input type=\"hidden\" id=\"cartItemsInput\" name=\"cartItemsInput\"");
                BeginWriteAttribute("value", " value=\"", 10762, "\"", 10770, 0);
                EndWriteAttribute();
                WriteLiteral(@" />

                        <div id=""InfoModal"" class=""modal fade "" tabindex=""-1"">
                            <div class=""modal-dialog"">
                                <div class=""modal-content container"">
                                    <div class=""modal-header"">
                                        <h5 class=""modal-title card-header"">Thông tin giao hàng</h5>
                                        <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal""></button>
                                    </div>
                                    <div class=""modal-body"">
                                        <div class=""   "">
                                            <input type=""hidden"" class=""form-control"" id=""Idkh"" readonly name=""Idkh""");
                BeginWriteAttribute("value", " value=\"", 11547, "\"", 11578, 1);
#nullable restore
#line 193 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
WriteAttributeValue("", 11555, thongtinkhachhang.Idkh, 11555, 23, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@">
                                            <div class=""col-md-12   bg-white"">

                                                <div class="" mb-4"">
                                                    <div class=""mb-3"">
                                                        <label for=""Tenkh"">Tên</label>
                                                        <input type=""text"" class=""form-control"" id=""Tenkh"" readonly name=""Tenkh""");
                BeginWriteAttribute("value", " value=\"", 12021, "\"", 12053, 1);
#nullable restore
#line 199 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
WriteAttributeValue("", 12029, thongtinkhachhang.Tenkh, 12029, 24, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@"
                                                               placeholder=""Họ tên nhận hàng"">
                                                    </div>
                                                    <div class=""mb-3"">
                                                        <label for=""Sdt"">Số điện thoại</label>
                                                        <input id=""Sdt"" type=""text"" class=""form-control"" name=""Sdt"" readonly");
                BeginWriteAttribute("value", " value=\"", 12504, "\"", 12534, 1);
#nullable restore
#line 204 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
WriteAttributeValue("", 12512, thongtinkhachhang.Sdt, 12512, 22, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@"
                                                               placeholder=""Số điện thoại nhận hàng"">
                                                    </div>
                                                    <div class=""mb-3"">
                                                        <label for=""Email"">Email</label>
                                                        <input type=""text"" class=""form-control"" id=""Email"" readonly name=""Email""");
                BeginWriteAttribute("value", " value=\"", 12990, "\"", 13022, 1);
#nullable restore
#line 209 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
WriteAttributeValue("", 12998, thongtinkhachhang.Email, 12998, 24, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@"
                                                               placeholder=""Email liên hệ"">
                                                    </div>
                                                    <div class=""mb-3"">
                                                        <label for=""Diachi"">Địa chỉ nhận hàng</label>
                                                        <textarea type=""text"" class=""form-control"" readonly id=""Diachi"" name=""Diachi""");
                BeginWriteAttribute("value", " value=\"", 13486, "\"", 13494, 0);
                EndWriteAttribute();
                WriteLiteral("\r\n                                                                  maxlength=\"4000\" required placeholder=\"Địa chỉ nhận hàng\">");
#nullable restore
#line 215 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
                                                                                                                       Write(thongtinkhachhang.Diachi);

#line default
#line hidden
#nullable disable
                WriteLiteral("</textarea>\r\n                                                    </div>\r\n                                                    <div");
                BeginWriteAttribute("class", " class=\"", 13775, "\"", 13783, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                                        <label for=""Diachi"">Lưu ý</label>
                                                        <textarea type=""text"" class=""form-control"" id=""noidungphu"" name=""noidungphu"" maxlength=""4000""
                                                                  placeholder=""Lưu ý giao hàng""></textarea>
                                                    </div>


                                                </div>

                                            </div>

                                        </div>


                                        <div class=""modal-footer"">

                                            <a href=""#InfoModal"" role=""button"" class=""btn btn-secondary"" data-bs-toggle=""modal"">Hủy bỏ</a>

                                            <button id=""ordered-btn-authen"" onclick=""submitFormAuthen()"" class=""btn btn-primary"">
                                                Đặt hàng
                                         ");
                WriteLiteral("   </button>\r\n");
                WriteLiteral("                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 251 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\Home\Cart.cshtml"
                }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
            </div>
        </div>
    </div>
</section>
<link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"">

<script src=""https://code.jquery.com/jquery-3.6.0.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js""></script>
<script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js""></script>
<script src=""https://code.jquery.com/jquery-3.2.1.slim.min.js""
        integrity=""sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN""
        crossorigin=""anonymous""></script>
<script>
    const VND = new Intl.NumberFormat('vi-VN', {
        style: 'currency',
        currency: 'VND',
    });
    $(document).ready(function () {

        const totalAmount = document.getElementById(""totalAmount"");
        const totalAmountShip = document.getElementById(""totalAmountShip"");
        function addItemToList(item) {
            let totalPrice = 0;

           ");
            WriteLiteral(@" const cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

            //số lượng sản phẩm
            const cartListCount = document.getElementById('cart-list-count');
            cartListCount.innerText = cartItems.length;


            const cartList = document.getElementById('cart-list');

            cartItems.forEach(item => {

                const productRow = document.createElement('div');
                productRow.className = 'row mb-2 pb-2';
                productRow.style.borderBottom = ""1px solid #ccc""

                const productImageCol = document.createElement('div');
                productImageCol.className = 'col-lg-3 col-md-12 mb-4 mb-lg-0';

                const productImage = document.createElement('div');
                productImage.className = 'bg-image hover-overlay hover-zoom ripple rounded';
                productImage.setAttribute('data-mdb-ripple-color', 'light');

                const productImageLink = document.createElement('a');
   ");
            WriteLiteral(@"             productImageLink.href = '#';

                const productImageMask = document.createElement('div');
                productImageMask.className = 'mask';
                productImageMask.style.backgroundColor = 'rgba(251, 251, 251, 0.2)';

                const productImageElement = document.createElement('img');
                productImageElement.src = ""/Images/"" + item.productImage;
                productImageElement.className = 'w-100';
                productImageElement.alt = item.productName;

                productImageLink.appendChild(productImageMask);
                productImage.appendChild(productImageElement);
                productImage.appendChild(productImageLink);
                productImageCol.appendChild(productImage);

                const productDataCol = document.createElement('div');
                productDataCol.className = 'col-lg-5 col-md-6 mb-4 mb-lg-0';

                const productName = document.createElement('p');
                product");
            WriteLiteral(@"Name.innerHTML = `<strong>${item.productName}</strong>`;
                const productColor = document.createElement('p');
                productColor.innerHTML = `Giá: ${VND.format(item.productPrice)}`;
                //const productSize = document.createElement('p');
                //productSize.innerHTML = `Size: ${item.size}`;
                const removeButton = document.createElement('button');
                removeButton.className = 'btn btn-danger btn-sm me-1 mb-2';
                removeButton.setAttribute('data-mdb-toggle', 'tooltip');
                removeButton.title = 'Remove item';
                removeButton.innerHTML = '<i class=""fas fa-trash""></i>';
                removeButton.onclick = function () {
                    removeItem(item.productId);
                }

                productDataCol.appendChild(productName);
                productDataCol.appendChild(productColor);
                //productDataCol.appendChild(productSize);
                productDataCol.a");
            WriteLiteral(@"ppendChild(removeButton);

                const productQuantityCol = document.createElement('div');
                productQuantityCol.className = 'col-lg-4 col-md-6 mb-4 mb-lg-0';

                const quantityDiv = document.createElement('div');
                quantityDiv.className = 'd-flex mb-4';
                quantityDiv.style.maxWidth = '300px';

                const quantityDecreaseButton = document.createElement('button');
                quantityDecreaseButton.className = 'btn btn-primary px-3 me-2';
                quantityDecreaseButton.style.maxHeight = '40px';
                quantityDecreaseButton.setAttribute('onclick', ""this.parentNode.querySelector('input[type=number]').stepDown()"");
                quantityDecreaseButton.innerHTML = '<i class=""fas fa-minus""></i>';
                quantityDecreaseButton.onclick = function () {
                    quantityDecrease(item.productId);
                }

                const quantityInput = document.createElement('input');");
            WriteLiteral(@"
                quantityInput.id = 'form1';
                quantityInput.min = '1';
                quantityInput.name = 'quantity';
                quantityInput.value = item.count;
                quantityInput.type = 'number';
                quantityInput.className = 'form-control';
                quantityInput.readOnly = true;

                const quantityInputLabel = document.createElement('label');
                quantityInputLabel.className = 'form-label';
                quantityInputLabel.setAttribute('for', 'form1');
                // quantityInputLabel.innerHTML = 'Quantity';

                const quantityIncreaseButton = document.createElement('button');
                quantityIncreaseButton.className = 'btn btn-primary px-3 ms-2';
                quantityIncreaseButton.style.maxHeight = '40px';
                quantityIncreaseButton.setAttribute('onclick', ""this.parentNode.querySelector('input[type=number]').stepUp()"");
                quantityIncreaseButton.innerHTML =");
            WriteLiteral(@" '<i class=""fas fa-plus""></i>';
                quantityIncreaseButton.onclick = function () {
                    quantityIncrease(item.productId);
                }
                quantityDiv.appendChild(quantityDecreaseButton);
                quantityDiv.appendChild(quantityInput);
                quantityDiv.appendChild(quantityInputLabel);
                quantityDiv.appendChild(quantityIncreaseButton);

                productQuantityCol.appendChild(quantityDiv);

                const checkboxInput = document.createElement('input');
                checkboxInput.id = 'myCheckbox';
                checkboxInput.type = 'checkbox';
                if (item.check === 1) {
                    checkboxInput.checked = true;
                }
                else {
                    checkboxInput.checked = false;
                }
                checkboxInput.onclick = () => {
                    updateItemCheck(item, checkboxInput.checked);
                };

                prod");
            WriteLiteral(@"uctRow.appendChild(checkboxInput);
                productRow.appendChild(productImageCol);
                productRow.appendChild(productDataCol);
                productRow.appendChild(productQuantityCol);

                cartList.appendChild(productRow);

                //TỔNG TIỀN
                if (item.check == 1) {
                    totalPrice = parseInt(totalPrice) + (parseInt(item.productPrice) * parseInt(item.count));
                }

                //totalPrice = parseInt(totalPrice) + (parseInt(item.productPrice) * parseInt(item.count));

            })


            totalAmount.innerText = VND.format(totalPrice);
            totalAmountShip.innerText = VND.format(totalPrice + 15000);


            //truyền dữ liệu qua controller
            let cartItemss = JSON.parse(localStorage.getItem(""cartItems""));
            if (cartItemss) {
                document.getElementById(""cartItemsInput"").value = JSON.stringify(cartItemss);
            }
            //console.lo");
            WriteLiteral(@"g(JSON.stringify(cartItems));
            //if (cartItems.length > 0) {
            //    document.getElementById(""ordered-action-btn"").disabled = false;
            //} else {
            //    document.getElementById(""ordered-action-btn"").disabled = true;

            //}
            if (parseInt(totalPrice) == 0) {
                document.getElementById(""ordered-action-btn"").disabled = true;
            } else {
                document.getElementById(""ordered-action-btn"").disabled = false;
            }
        }
        addItemToList();

        function updateItemCheck(item, isChecked) {
            if (isChecked) {
                item.check = 1;
            } else {
                item.check = 0;
            }
            const cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];
            const index = cartItems.findIndex(i => i.productId === item.productId);
            if (index > -1) {
                cartItems[index] = item;
                localStorage.se");
            WriteLiteral(@"tItem('cartItems', JSON.stringify(cartItems));
            }

            let total = 0;
            total = CalculatePrice();
            totalAmount.innerText = """";
            totalAmountShip.innerText = """";
        
            totalAmount.innerText = VND.format(total);
            totalAmountShip.innerText = VND.format(total + 15000);

            if (parseInt(total) == 0) {
                document.getElementById(""ordered-action-btn"").disabled = true;
            } else {
                document.getElementById(""ordered-action-btn"").disabled = false;
            }
            updateCartList();
        }


        function CalculatePrice() {
            let cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];
            let total = 0;
            for (let i = 0; i < cartItems.length; i++) {
                if (cartItems[i].check === 1) {
                    total += cartItems[i].productPrice * cartItems[i].count;
                }
            }
            return ");
            WriteLiteral(@"total;
        }

        function removeItem(id) {
            const cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

            const index = cartItems.findIndex(item => item.productId === id);
            if (index > -1) {
                cartItems.splice(index, 1);
                localStorage.setItem('cartItems', JSON.stringify(cartItems));
                const productRow = document.getElementById(`product-${id}`);
                if (productRow) {
                    productRow.remove();
                }
                updateCartList();
            }
            document.getElementById(""count-items"").innerText = cartItems.length;

        }
        function updateCartList() {
            const cartList = document.getElementById('cart-list');
            cartList.innerHTML = ''; // Xóa hết các sản phẩm trong giỏ hàng trên giao diện

            addItemToList();

        }

        function quantityDecrease(id) {
            const cartItems = JSON.parse(loc");
            WriteLiteral(@"alStorage.getItem('cartItems')) || [];

            const index = cartItems.findIndex(item => item.productId === id);
            if (index > -1) {
                if (parseInt(cartItems[index].count) > 1) {
                    cartItems[index].count = parseInt(cartItems[index].count) - 1;
                }

                localStorage.setItem('cartItems', JSON.stringify(cartItems));

                updateCartList();

                const totalPrice = cartItems.reduce((total, item) => {
                    //console.log(item.productPrice)
                    return total + parseInt(item.productPrice) * parseInt(item.count);
                }, 0);

                // chỉ gán khi check=1
                totalAmount.innerText = VND.format(totalPrice);
                totalAmountShip.innerText = VND.format(totalPrice + 15000);


            }

        }
        function quantityIncrease(id) {
            const cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

       ");
            WriteLiteral(@"     const index = cartItems.findIndex(item => item.productId === id);
            if (index > -1) {
                cartItems[index].count = parseInt(cartItems[index].count) + 1;

                localStorage.setItem('cartItems', JSON.stringify(cartItems));

                updateCartList();

                const totalPrice = cartItems.reduce((total, item) => {
                    //console.log(item.productPrice)
                    return total + parseInt(item.productPrice) * parseInt(item.count);
                }, 0);

                totalAmount.innerText = VND.format(totalPrice);
                totalAmountShip.innerText = VND.format(totalPrice + 15000);

            }
        }

        function checkCookie(name) {
            var cookies = document.cookie.split(';');
            for (var i = 0; i < cookies.length; i++) {
                var cookie = cookies[i].trim();
                if (cookie.indexOf(name) == 0) {
                    return true;
                }
        ");
            WriteLiteral(@"    }
            return false;
        }

        if (checkCookie(""CustomerCookie"")) {
            const formOrderedAuthen = document.getElementById(""form-ordered-authen"");

            formOrderedAuthen.addEventListener('submit', function () {
                var cartItems = JSON.parse(localStorage.getItem(""cartItems""));
                cartItems = cartItems.filter(item => item.check !== 1); // Lưu lại các sản phẩm check khác 1 - là chưa được mưa
                localStorage.removeItem(""cartItems"");
                localStorage.setItem('cartItems', JSON.stringify(cartItems));
            })
        }

        const formOrdered = document.getElementById(""form-ordered"");

        formOrdered.addEventListener('submit', function () {
            var cartItems = JSON.parse(localStorage.getItem(""cartItems""));
            cartItems = cartItems.filter(item => item.check !== 1); // Lưu lại các sản phẩm check khác 1 - là chưa được mưa
            localStorage.removeItem(""cartItems"");
            ");
            WriteLiteral(@"localStorage.setItem('cartItems', JSON.stringify(cartItems));
        })


        const orderedbtn = document.getElementById(""ordered-btn"");

        formOrdered.addEventListener('change', function () {
            if (formOrdered.checkValidity()) {
                orderedbtn.disabled = false;
            } else {
                orderedbtn.disabled = true;
            }
        });
        formOrdered.addEventListener(""change"", () => {
            validateForm(formOrdered, orderedbtn);
        });
        function validateForm(form, saveButton) {
            // Lặp qua tất cả các trường input, textarea và select của form
            let formIsValid = true;
            const fields = form.querySelectorAll(""input, textarea, select"");
            let currentFieldIsValid = true;
            fields.forEach((field) => {
                if (field === event.target) {
                    currentFieldIsValid = field.checkValidity();
                }

                if (!currentFieldIsValid");
            WriteLiteral(@" || !field.checkValidity()) {
                    // Nếu trường không hợp lệ, đánh dấu form không hợp lệ và hiển thị lỗi
                    formIsValid = false;
                    field.classList.add(""is-invalid"");
                    field.setAttribute('placeholder', 'Trường dữ liệu bắt buộc!');
                    field.style.color = ""red"";
                } else {
                    field.classList.remove(""is-invalid"");
                    field.setAttribute('placeholder', '');
                    field.style.color = ""black"";
                }
            });

            // Enable hoặc disable nút lưu dữ liệu tùy thuộc vào trạng thái hợp lệ của form
            orderedbtn.disabled = !formIsValid;
        }
    })


</script>
<script>
    function submitForm() {
        var cartItems = localStorage.getItem(""cartItems"");
        var data = {
            Tenkh: $('#Tenkh').val(),
            Sdt: $('#Sdt').val(),
            Email: $('#Email').val(),
            Diachi: $('#Emai");
            WriteLiteral(@"l').val(),
            noidungphu: $('#noidungphu').val(),
            cartItemsInput: cartItems
        };
        //alert(cartItems)
        cartItemss = cartItems.filter(item => item.check !== 1); //lưu lại các sản phẩm check khác 1 - là chưa được mưa
        localStorage.removeItem(""cartItems"");

        localStorage.setItem('cartItems', JSON.stringify(cartItemss));

        updateCartList();
        alert(""sssssssssssssssssss"")

        $.ajax({
            url: '/Cart/CreateForGuestMultiOrder',
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(data),
            success: function (response) {
                if (response.success) {
                    alert(""Ok"");
                }
            },
            error: function (xhr, status, error) {
                if (xhr.responseText != """") {
                    var err = JSON.parse(xhr.responseText);
                    if (err.status == 440) {
              ");
            WriteLiteral(@"          //alert(""Session expired"");
                    }
                    else {
                        //alert(err.message);
                    }
                }
                else {
                    //alert(""Crash"");
                }
            }
        });
        alert(""Đặt hàng thành công tạm"");


    }
    function submitFormAuthen() {
        var cartItems = localStorage.getItem(""cartItems"");
        var data = {
            Tenkh: $('#Tenkh').val(),
            Sdt: $('#Sdt').val(),
            Email: $('#Email').val(),
            Diachi: $('#Email').val(),
            noidungphu: $('#noidungphu').val(),
            cartItemsInput: cartItems
        };
        //alert(cartItems)
        //localStorage.removeItem(""cartItems"");

        cartItemss = cartItems.filter(item => item.check !== 1); //lưu lại các sản phẩm check khác 1 - là chưa được mua
        localStorage.removeItem(""cartItems"");

        localStorage.setItem('cartItems', JSON.stringify(cartI");
            WriteLiteral(@"temss));

        updateCartList();
        alert(""sssssssssssssssssss"")

        $.ajax({
            url: '/Cart/CreateForGuestMultiOrderAuthen',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(data),
            success: function (response) {

                if (response.status == 200) {
                    localStorage.removeItem(""cartItems"");
                    updateCartList();

                    alert(""Đặt hàng thành công"");
                } else {
                    alert(""Đặt hàng thất bại SSSSS"");

                }
            },
            error: function (xhr, status, error) {
                // Xử lý lỗi
                alert(""Đặt hàng thất bại"");

            }
        });
        alert(""Đặt hàng thành công tạm"");


    }
</script>



<script type=""text/javascript"" src=""https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js""></script>


");
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
