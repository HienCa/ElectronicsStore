#pragma checksum "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\DataVisualization\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "82c00749f6df406f8b8b23a299f6c242c5183503"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_DataVisualization_Index), @"mvc.1.0.view", @"/Views/DataVisualization/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\_ViewImports.cshtml"
using ElectronicsStore;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\_ViewImports.cshtml"
using ElectronicsStore.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"82c00749f6df406f8b8b23a299f6c242c5183503", @"/Views/DataVisualization/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d5b5393bb9c64daa29820e07180089a8626bd590", @"/Views/_ViewImports.cshtml")]
    public class Views_DataVisualization_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<ElectronicsStore.Models.Dondathang>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\DataVisualization\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "_Admin";

#line default
#line hidden
#nullable disable
            WriteLiteral("<div style=\"height:90vh\">\r\n    <ul class=\"tabs row text-center\">\r\n");
            WriteLiteral(@"
        <li class=""tab-link  col-md-2 current"" data-tab=""tab-1"">Nhập Kho</li>
        <li class=""tab-link  col-md-2"" data-tab=""tab-2"">Xuất Kho</li>
        <li class=""tab-link  col-md-2"" data-tab=""tab-3"">Tồn Kho</li>

    </ul>

    <div id=""tab-1"" class=""tab-content current"">

        <div style=""max-width:100%; max-height:80vh"">
            <h3 class=""text-center"">Biểu đồ cột</h3>
            <canvas id=""chart-nhap-kho-bar""></canvas>

        </div>
        <div class=""mt-3"" style=""max-width:100%; max-height:80vh"">
            <h3 class=""text-center"">Biểu đồ đường</h3>
            <canvas id=""chart-nhap-kho-line""></canvas>

        </div>
        <div class=""mt-3"" style=""max-width:100%; max-height:80vh"">
            <h3 class=""text-center"">Biểu đồ tròn</h3>

            <canvas id=""chart-nhap-kho-pie""></canvas>

        </div>

    </div>

    <div id=""tab-2"" class=""tab-content "">
        <div style=""max-width:100%; max-height:80vh"">
            <h3 class=""text-center"">Biểu đồ");
            WriteLiteral(@" cột</h3>
            <canvas id=""chart-xuat-kho-bar""></canvas>

        </div>
        <div class=""mt-3"" style=""max-width:100%; max-height:80vh"">
            <h3 class=""text-center"">Biểu đồ đường</h3>
            <canvas id=""chart-xuat-kho-line""></canvas>

        </div>
        <div class=""mt-3"" style=""max-width:100%; max-height:80vh"">
            <h3 class=""text-center"">Biểu đồ tròn</h3>
            <canvas id=""chart-xuat-kho-pie""></canvas>

        </div>
    </div>

    <div id=""tab-3"" class=""tab-content "">
        <div style=""max-width:100%; max-height:80vh"">
            <h3 class=""text-center"">Biểu đồ cột</h3>
            <canvas id=""chart-ton-kho-bar""></canvas>

        </div>
        <div class=""mt-3"" style=""max-width:100%; max-height:80vh"">
            <h3 class=""text-center"">Biểu đồ đường</h3>
            <canvas id=""chart-ton-kho-line""></canvas>

        </div>
        <div class=""mt-3"" style=""max-width:100%; max-height:80vh"">
            <h3 class=""text-center"">Biểu đồ");
            WriteLiteral(@" tròn</h3>
            <canvas id=""chart-ton-kho-pie""></canvas>

        </div>
    </div>
</div>
<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.2.1/chart.min.js""></script>
<script src=""https://cdn.jsdelivr.net/npm/chart.js""></script>
<script>
    //TỔNG NHẬP TẤT CẢ
    let productQuantitiesNhap =");
#nullable restore
#line 79 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\DataVisualization\Index.cshtml"
                          Write(Html.Raw(ViewBag.productQuantitiesNhap));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
    const productId_Nhap = productQuantitiesNhap.map(obj => obj[Object.keys(obj)[0]]);
    const quantites_Nhap = productQuantitiesNhap.map(obj => obj[Object.keys(obj)[1]]);
    const productName_Nhap = productQuantitiesNhap.map(obj => obj[Object.keys(obj)[2]]);


    var ctx_nhap_bar = document.getElementById('chart-nhap-kho-bar').getContext('2d');
    var myChart_nhap_bar = new Chart(ctx_nhap_bar, {
        type: 'bar',
        data: {
            labels: productName_Nhap,
            datasets: [{
                label: 'Tổng số lượng hàng hóa đã nhập',
                data: quantites_Nhap,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 9");
            WriteLiteral(@"9, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,
                barThickness: 120

            }]
        },
        options: {
            //responsive: true,
            //maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true
                },

            }
        }
    });
    var ctx_nhap_line = document.getElementById('chart-nhap-kho-line').getContext('2d');
    var myChart_nhap_line = new Chart(ctx_nhap_line, {
        type: 'line',
        data: {
            labels: productName_Nhap,
            datasets: [{
                label: 'Tổng số lượng hàng hóa đã nhập',
                data: quantites_Nhap,
                backgroundColor: [
                    'rgba(255, 99, 132, 0");
            WriteLiteral(@".2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,
                barThickness: 120

            }]
        },
        options: {
            //responsive: true,
            //maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true
                },

            }
        }
    });
    var ctx_nhap_pie = document.getElementById('chart-nhap-kho-pie').getContext('2d');
    va");
            WriteLiteral(@"r myChart_nhap_pie = new Chart(ctx_nhap_pie, {
        type: 'pie',
        data: {
            labels: productName_Nhap,
            datasets: [{
                label: 'Tổng số lượng hàng hóa đã nhập',
                data: quantites_Nhap,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,
            }]
        },
        options: {


        }
    });");
            WriteLiteral("\r\n\r\n</script>\r\n<script>\r\n    //TỔNG XUẤT TẤT CẢ\r\n    let productQuantitiesXuat =");
#nullable restore
#line 201 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\DataVisualization\Index.cshtml"
                          Write(Html.Raw(ViewBag.productQuantitiesXuat));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
    const productId_Xuat = productQuantitiesXuat.map(obj => obj[Object.keys(obj)[0]]);
    const quantites_Xuat = productQuantitiesXuat.map(obj => obj[Object.keys(obj)[1]]);
    const productName_Xuat = productQuantitiesXuat.map(obj => obj[Object.keys(obj)[2]]);


    var ctx_xuat_bar = document.getElementById('chart-xuat-kho-bar').getContext('2d');
    var myChart_xuat_bar = new Chart(ctx_xuat_bar, {
        type: 'bar',
        data: {
            labels: productName_Xuat,
            datasets: [{
                label: 'Tổng số lượng hàng hóa đã xuất',
                data: quantites_Xuat,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 9");
            WriteLiteral(@"9, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,
                barThickness: 120

            }]
        },
        options: {
            //responsive: true,
            //maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true
                },

            }
        }
    });


    var ctx_xuat_line = document.getElementById('chart-xuat-kho-line').getContext('2d');
    var myChart_xuat_line = new Chart(ctx_xuat_line, {
        type: 'line',
        data: {
            labels: productName_Xuat,
            datasets: [{
                label: 'Tổng số lượng hàng hóa đã xuất',
                data: quantites_Xuat,
                backgroundColor: [
                    'rgba(255, 99, 13");
            WriteLiteral(@"2, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,
                barThickness: 120

            }]
        },
        options: {
            //responsive: true,
            //maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true
                },

            }
        }
    });




    var ctx_xuat_pie = document.getElementById('chart-xuat-kho-pie').getContext('2");
            WriteLiteral(@"d');
    var myChart_xuat_pie = new Chart(ctx_xuat_pie, {
        type: 'pie',
        data: {
            labels: productName_Xuat,
            datasets: [{
                label: 'Tổng số lượng hàng hóa đã xuất',
                data: quantites_Xuat,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,
            }]
        },
        options: {
          ");
            WriteLiteral("  //responsive: true,\r\n            //maintainAspectRatio: false,\r\n\r\n        }\r\n    });\r\n</script>\r\n\r\n\r\n\r\n<script>\r\n    //TỔNG TỒN TẤT CẢ\r\n    let productQuantitiesTonKho =");
#nullable restore
#line 332 "D:\ĐH-08CNTT1\HienCa\ElectronicsStore\Views\DataVisualization\Index.cshtml"
                            Write(Html.Raw(ViewBag.productQuantitiesTonKho));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
    const productId_Ton = productQuantitiesTonKho.map(obj => obj[Object.keys(obj)[0]]);
    const quantites_Ton = productQuantitiesTonKho.map(obj => obj[Object.keys(obj)[1]]);
    const productName_Ton = productQuantitiesTonKho.map(obj => obj[Object.keys(obj)[2]]);


    var ctx_ton_bar = document.getElementById('chart-ton-kho-bar').getContext('2d');
    var myChart_ton_bar = new Chart(ctx_ton_bar, {
        type: 'bar',
        data: {
            labels: productName_Xuat,
            datasets: [{
                label: 'Tổng số lượng hàng hóa tồn kho',
                data: quantites_Xuat,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99");
            WriteLiteral(@", 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,
                barThickness: 120

            }]
        },
        options: {
            //responsive: true,
            //maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true
                },

            }
        }
    });


    var ctx_ton_line = document.getElementById('chart-ton-kho-line').getContext('2d');
    var myChart_ton_line = new Chart(ctx_ton_line, {
        type: 'line',
        data: {
            labels: productName_Xuat,
            datasets: [{
                label: 'Tổng số lượng hàng hóa tồn kho',
                data: quantites_Xuat,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.");
            WriteLiteral(@"2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,
                barThickness: 120

            }]
        },
        options: {
            //responsive: true,
            //maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true
                },

            }
        }
    });




    var ctx_ton_pie = document.getElementById('chart-ton-kho-pie').getContext('2d');
 ");
            WriteLiteral(@"   var myChart_ton_pie = new Chart(ctx_ton_pie, {
        type: 'pie',
        data: {
            labels: productName_Xuat,
            datasets: [{
                label: 'Tổng số lượng hàng hóa tồn kho',
                data: quantites_Xuat,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,
            }]
        },
        options: {
            //respo");
            WriteLiteral("nsive: true,\r\n            //maintainAspectRatio: false,\r\n\r\n        }\r\n    });\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<ElectronicsStore.Models.Dondathang>> Html { get; private set; }
    }
}
#pragma warning restore 1591
