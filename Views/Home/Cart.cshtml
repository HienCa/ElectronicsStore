@{
    Layout = "_Home";
    ElectronicsStoreContext _context = new ElectronicsStoreContext();
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>

<style>
    .modal-dialog {
        max-width: none !important;
    }

    .gradient-custom {
        /* fallback for old browsers */
        background: #6a11cb;
        /* Chrome 10-25, Safari 5.1-6 */
        background: -webkit-linear-gradient(to right, rgba(106, 17, 203, 1), rgba(37, 117, 252, 1));
        /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
        background: linear-gradient(to right, rgb(203, 197, 213), rgb(209, 211, 213))
    }
</style>
<section class="h-100 gradient-custom">
    <div class="pl-5 pr-5 py-3">
        <div class="row d-flex justify-content-center " style="margin-top:70px">
            <div class="col-md-7 mb-5 col-sm-12">
                <div class="card mb-4" style="height:85vh;overflow-y:scroll">
                    <div class="card-header py-3">
                        <h5 class="mb-0">Đơn hàng - <span id="cart-list-count"></span> sản phẩm</h5>
                    </div>
                    <div class="card-body" id="cart-list">
                        @*load cart list*@
                        @if (TempData["success"] != null)
                        {
                            <h3 class="text-success text-center">@TempData["success"]</h3>
                            <p class="text-success text-center">Mã đơn hàng của bạn là: @TempData["Madh"]</p>
                            <p class="text-success text-center">Số điện thoại nhận hàng: @TempData["Sdt"]</p>
                            <p class="text-warning text-center">Lưu ý: lưu lại mã đơn hàng để tiện theo dõi trạng thái đơn hàng vừa đặt.</p>
                        }
                    </div>
                </div>

            </div>
            <div class="col-md-5 col-sm-12">
                @if (ViewData["Info"] == null)
                {
                    <form id="form-ordered" asp-action="CreateForGuestMultiOrder" asp-controller="Dondathang">

                        <div id="myModal" class="modal fade " tabindex="-1">
                            <div class="modal-dialog">
                                <div class="modal-content container">
                                    <div class="modal-header">
                                        <h5 class="modal-title card-header">Thông tin giao hàng</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="   ">

                                            <div class="col-md-12   bg-white">
                                                <div class=" mb-4">
                                                    <div class="mb-3">
                                                        <label for="Tenkh">Tên</label>
                                                        <input id="Tenkh" type="text" class="form-control" name="Tenkh" required
                                                               maxlength="255" placeholder="Họ tên nhận hàng">
                                                    </div>
                                                    <div class="mb-3">
                                                        <label for="Sdt">Số điện thoại</label>
                                                        <input id="Sdt" type="text" class="form-control" name="Sdt" required maxlength="255"
                                                               placeholder="Số điện thoại nhận hàng">
                                                    </div>
                                                    <div class="mb-3">
                                                        <label for="Email">Email</label>
                                                        <input id="Email" type="email" class="form-control" name="Email"
                                                               placeholder="Email liên hệ">
                                                    </div>
                                                    <div class="mb-3">
                                                        <label for="Diachi">Địa chỉ nhận hàng</label>
                                                        <textarea id="Diachi" type="text" class="form-control" name="Diachi"
                                                                  maxlength="4000" required placeholder="Địa chỉ nhận hàng"></textarea>
                                                    </div>
                                                    <div class="">
                                                        <label for="Diachi">Lưu ý</label>
                                                        <textarea type="text" class="form-control" id="noidungphu" name="noidungphu"
                                                                  placeholder="Lưu ý khi giao hàng"></textarea>
                                                    </div>


                                                </div>

                                            </div>

                                        </div>


                                        <div class="modal-footer">

                                            <a href="#myModal" role="button" class="btn btn-secondary" data-bs-toggle="modal">Hủy bỏ</a>
                                            @*<button type="submit" id="ordered-btn" disabled class="btn btn-primary">
                                        Đặt hàng
                                    </button>*@
                                            <button id="ordered-btn" onclick="submitForm()" disabled class="btn btn-primary">
                                                Đặt hàng
                                            </button>
                                        </div>

                                    </div>

                                </div>
                            </div>
                        </div>
                        <input type="hidden" id="cartItemsInput" name="cartItemsInput" value="" />

                    </form>
                }
                <div class="card mb-4">
                    <div class="card-body">
                        <p><strong>Hình thức thanh toán</strong></p>
                        <img class="me-2" style="width:45px"
                             src="https://mdbcdn.b-cdn.net/wp-content/plugins/woocommerce-gateway-stripe/assets/images/visa.svg"
                             alt="Visa" />
                        <span class="bg-light p-2 border-1">Thanh toán khi nhận hàng</span>
                    </div>
                </div>

                <div class="card mt-2">
                    <div class="card-header py-3">
                        <h5 class="mb-0">Tổng đơn hàng</h5>
                    </div>
                    <div class="card-body">
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0">
                                Tổng tiền
                                <span id="totalAmount"></span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                                Shipping
                                <span>15.000 đ</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                                Ngày giao dự kiến
                                @{
                                    DateTime Ngaygiaodukien = DateTime.Now;
                                    Ngaygiaodukien = Ngaygiaodukien.AddDays(3);
                                }
                                <span>
                                    @Ngaygiaodukien.ToString("dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture)
                                </span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3">
                                Số tiền cần trả (đã bao gồm VAT)
                                <span id="totalAmountShip"><strong></strong></span>
                            </li>
                        </ul>
                        <div class="d-flex justify-content-between align-items-center">

                            <a href="/Home/Index" class="btn btn-light ">Quay lại</a>

                            @if (ViewData["isExist"] != null && ViewData["isExist"].Equals("Exist"))
                            {
                                <button href="#InfoModal" role="button" disabled id="ordered-action-btn" class="btn btn-primary" data-bs-toggle="modal">Tiến hành đặt hàng</button>
                                @*<a href="#InfoModal" role="button" disabled id="ordered-action-btn" class="btn btn-primary" data-bs-toggle="modal">Tiến hành đặt hàng</a>*@

                            }
                            else
                            {
                                <button href="#myModal" role="button" disabled id="ordered-action-btn" class="btn btn-primary" data-bs-toggle="modal">Tiến hành đặt hàng</button>
                                @*<a href="#myModal" role="button" disabled id="ordered-action-btn" class="btn btn-primary" data-bs-toggle="modal">Tiến hành đặt hàng</a>*@

                            }

                        </div>
                    </div>
                </div>

                @if (ViewData["Info"] != null)
                {
                    Khachhang thongtinkhachhang = ViewData["Info"] as Khachhang;

                    <form asp-action="CreateForGuestMultiOrderAuthen" asp-controller="Dondathang">
                        <input type="hidden" id="cartItemsInput" name="cartItemsInput" value="" />

                        <div id="InfoModal" class="modal fade " tabindex="-1">
                            <div class="modal-dialog">
                                <div class="modal-content container">
                                    <div class="modal-header">
                                        <h5 class="modal-title card-header">Thông tin giao hàng</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="   ">
                                            <input type="hidden" class="form-control" readonly name="Idkh" value="@thongtinkhachhang.Idkh">
                                            <div class="col-md-12   bg-white">

                                                <div class=" mb-4">
                                                    <div class="mb-3">
                                                        <label for="Tenkh">Tên</label>
                                                        <input type="text" class="form-control" readonly name="Tenkh" value="@thongtinkhachhang.Tenkh"
                                                               placeholder="Họ tên nhận hàng">
                                                    </div>
                                                    <div class="mb-3">
                                                        <label for="Sdt">Số điện thoại</label>
                                                        <input id="Sdt" type="text" class="form-control" name="Sdt" readonly value="@thongtinkhachhang.Sdt"
                                                               placeholder="Số điện thoại nhận hàng">
                                                    </div>
                                                    <div class="mb-3">
                                                        <label for="Email">Email</label>
                                                        <input type="text" class="form-control" readonly name="Email" value="@thongtinkhachhang.Email"
                                                               placeholder="Email liên hệ">
                                                    </div>
                                                    <div class="mb-3">
                                                        <label for="Diachi">Địa chỉ nhận hàng</label>
                                                        <textarea type="text" class="form-control" readonly name="Diachi" value=""
                                                                  maxlength="4000" required placeholder="Địa chỉ nhận hàng">@thongtinkhachhang.Diachi</textarea>
                                                    </div>
                                                    <div class="">
                                                        <label for="Diachi">Lưu ý</label>
                                                        <textarea type="text" class="form-control" name="noidungphu" maxlength="4000"
                                                                  placeholder="Lưu ý giao hàng"></textarea>
                                                    </div>


                                                </div>

                                            </div>

                                        </div>


                                        <div class="modal-footer">

                                            <a href="#InfoModal" role="button" class="btn btn-secondary" data-bs-toggle="modal">Hủy bỏ</a>

                                            <button id="ordered-btn-authen" onclick="submitFormAuthen()" class="btn btn-primary">
                                                Đặt hàng
                                            </button>
                                        </div>

                                    </div>

                                </div>
                            </div>
                        </div>


                    </form>
                }

            </div>
        </div>
    </div>
</section>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
        integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
        crossorigin="anonymous"></script>
<script>
    const VND = new Intl.NumberFormat('vi-VN', {
        style: 'currency',
        currency: 'VND',
    });
    $(document).ready(function () {

        const totalAmount = document.getElementById("totalAmount");
        const totalAmountShip = document.getElementById("totalAmountShip");
        let totalPrice = 0;
        function addItemToList(item) {
            const cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

            //số lượng sản phẩm
            const cartListCount = document.getElementById('cart-list-count');
            cartListCount.innerText = cartItems.length;


            const cartList = document.getElementById('cart-list');

            cartItems.forEach(item => {

                const productRow = document.createElement('div');
                productRow.className = 'row mb-2 pb-2';
                productRow.style.borderBottom = "1px solid #ccc"

                const productImageCol = document.createElement('div');
                productImageCol.className = 'col-lg-3 col-md-12 mb-4 mb-lg-0';

                const productImage = document.createElement('div');
                productImage.className = 'bg-image hover-overlay hover-zoom ripple rounded';
                productImage.setAttribute('data-mdb-ripple-color', 'light');

                const productImageLink = document.createElement('a');
                productImageLink.href = '#';

                const productImageMask = document.createElement('div');
                productImageMask.className = 'mask';
                productImageMask.style.backgroundColor = 'rgba(251, 251, 251, 0.2)';

                const productImageElement = document.createElement('img');
                productImageElement.src = "/Images/" + item.productImage;
                productImageElement.className = 'w-100';
                productImageElement.alt = item.productName;

                productImageLink.appendChild(productImageMask);
                productImage.appendChild(productImageElement);
                productImage.appendChild(productImageLink);
                productImageCol.appendChild(productImage);

                const productDataCol = document.createElement('div');
                productDataCol.className = 'col-lg-5 col-md-6 mb-4 mb-lg-0';

                const productName = document.createElement('p');
                productName.innerHTML = `<strong>${item.productName}</strong>`;
                const productColor = document.createElement('p');
                productColor.innerHTML = `Giá: ${VND.format(item.productPrice)}`;
                const productSize = document.createElement('p');
                productSize.innerHTML = `Size: ${item.size}`;
                const removeButton = document.createElement('button');
                removeButton.className = 'btn btn-danger btn-sm me-1 mb-2';
                removeButton.setAttribute('data-mdb-toggle', 'tooltip');
                removeButton.title = 'Remove item';
                removeButton.innerHTML = '<i class="fas fa-trash"></i>';
                removeButton.onclick = function () {
                    removeItem(item.productId);
                }

                productDataCol.appendChild(productName);
                productDataCol.appendChild(productColor);
                productDataCol.appendChild(productSize);
                productDataCol.appendChild(removeButton);

                const productQuantityCol = document.createElement('div');
                productQuantityCol.className = 'col-lg-4 col-md-6 mb-4 mb-lg-0';

                const quantityDiv = document.createElement('div');
                quantityDiv.className = 'd-flex mb-4';
                quantityDiv.style.maxWidth = '300px';

                const quantityDecreaseButton = document.createElement('button');
                quantityDecreaseButton.className = 'btn btn-primary px-3 me-2';
                quantityDecreaseButton.style.maxHeight = '40px';
                quantityDecreaseButton.setAttribute('onclick', "this.parentNode.querySelector('input[type=number]').stepDown()");
                quantityDecreaseButton.innerHTML = '<i class="fas fa-minus"></i>';
                quantityDecreaseButton.onclick = function () {
                    quantityDecrease(item.productId);
                }

                const quantityInput = document.createElement('input');
                quantityInput.id = 'form1';
                quantityInput.min = '1';
                quantityInput.name = 'quantity';
                quantityInput.value = item.count;
                quantityInput.type = 'number';
                quantityInput.className = 'form-control';
                quantityInput.readOnly = true;

                const quantityInputLabel = document.createElement('label');
                quantityInputLabel.className = 'form-label';
                quantityInputLabel.setAttribute('for', 'form1');
                // quantityInputLabel.innerHTML = 'Quantity';

                const quantityIncreaseButton = document.createElement('button');
                quantityIncreaseButton.className = 'btn btn-primary px-3 ms-2';
                quantityIncreaseButton.style.maxHeight = '40px';
                quantityIncreaseButton.setAttribute('onclick', "this.parentNode.querySelector('input[type=number]').stepUp()");
                quantityIncreaseButton.innerHTML = '<i class="fas fa-plus"></i>';
                quantityIncreaseButton.onclick = function () {
                    quantityIncrease(item.productId);
                }
                quantityDiv.appendChild(quantityDecreaseButton);
                quantityDiv.appendChild(quantityInput);
                quantityDiv.appendChild(quantityInputLabel);
                quantityDiv.appendChild(quantityIncreaseButton);

                productQuantityCol.appendChild(quantityDiv);

                productRow.appendChild(productImageCol);
                productRow.appendChild(productDataCol);
                productRow.appendChild(productQuantityCol);

                cartList.appendChild(productRow);

                //TỔNG TIỀN
                totalPrice = parseInt(totalPrice) + (parseInt(item.productPrice) * parseInt(item.count));

            })
            totalAmount.innerText = VND.format(totalPrice);
            totalAmountShip.innerText = VND.format(totalPrice + 15000);
            //truyền dữ liệu qua controller
            let cartItemss = JSON.parse(localStorage.getItem("cartItems"));
            if (cartItemss) {
                document.getElementById("cartItemsInput").value = JSON.stringify(cartItemss);
            }
            console.log(JSON.stringify(cartItems));
            if (cartItems.length > 0) {
                document.getElementById("ordered-action-btn").disabled = false;
            } else {
                document.getElementById("ordered-action-btn").disabled = true;

            }
        }
        addItemToList();


        function removeItem(id) {
            const cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

            const index = cartItems.findIndex(item => item.productId === id);
            if (index > -1) {
                cartItems.splice(index, 1);
                localStorage.setItem('cartItems', JSON.stringify(cartItems));
                const productRow = document.getElementById(`product-${id}`);
                if (productRow) {
                    productRow.remove();
                }
                updateCartList();
            }
            document.getElementById("count-items").innerText = cartItems.length;

        }
        function updateCartList() {
            const cartList = document.getElementById('cart-list');
            cartList.innerHTML = ''; // Xóa hết các sản phẩm trong giỏ hàng trên giao diện

            addItemToList();

        }

        function quantityDecrease(id) {
            const cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

            const index = cartItems.findIndex(item => item.productId === id);
            if (index > -1) {
                if (parseInt(cartItems[index].count) > 1) {
                    cartItems[index].count = parseInt(cartItems[index].count) - 1;
                }

                localStorage.setItem('cartItems', JSON.stringify(cartItems));

                updateCartList();

                const totalPrice = cartItems.reduce((total, item) => {
                    console.log(item.productPrice)
                    return total + parseInt(item.productPrice) * parseInt(item.count);
                }, 0);
                totalAmount.innerText = VND.format(totalPrice);
                totalAmountShip.innerText = VND.format(totalPrice + 15000);


            }

        }
        function quantityIncrease(id) {
            const cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

            const index = cartItems.findIndex(item => item.productId === id);
            if (index > -1) {
                cartItems[index].count = parseInt(cartItems[index].count) + 1;

                localStorage.setItem('cartItems', JSON.stringify(cartItems));

                updateCartList();

                const totalPrice = cartItems.reduce((total, item) => {
                    console.log(item.productPrice)
                    return total + parseInt(item.productPrice) * parseInt(item.count);
                }, 0);

                totalAmount.innerText = VND.format(totalPrice);
                totalAmountShip.innerText = VND.format(totalPrice + 15000);

            }
        }



        const formOrdered = document.getElementById("form-ordered");
        const orderedbtn = document.getElementById("ordered-btn");

        formOrdered.addEventListener('change', function () {
            if (formOrdered.checkValidity()) {
                orderedbtn.disabled = false;
            } else {
                orderedbtn.disabled = true;
            }
        });
        formOrdered.addEventListener("change", () => {
            validateForm(formOrdered, orderedbtn);
        });
        function validateForm(form, saveButton) {
            // Lặp qua tất cả các trường input, textarea và select của form
            let formIsValid = true;
            const fields = form.querySelectorAll("input, textarea, select");
            let currentFieldIsValid = true;
            fields.forEach((field) => {
                if (field === event.target) {
                    currentFieldIsValid = field.checkValidity();
                }

                if (!currentFieldIsValid || !field.checkValidity()) {
                    // Nếu trường không hợp lệ, đánh dấu form không hợp lệ và hiển thị lỗi
                    formIsValid = false;
                    field.classList.add("is-invalid");
                    field.setAttribute('placeholder', 'Trường dữ liệu bắt buộc!');
                    field.style.color = "red";
                } else {
                    field.classList.remove("is-invalid");
                    field.setAttribute('placeholder', '');
                    field.style.color = "black";
                }
            });

            // Enable hoặc disable nút lưu dữ liệu tùy thuộc vào trạng thái hợp lệ của form
            orderedbtn.disabled = !formIsValid;
        }
    })



</script>
<script>
    function submitForm() {
        var cartItems = localStorage.getItem("cartItems");
        var data = {
            Tenkh: $('#Tenkh').val(),
            Sdt: $('#Sdt').val(),
            Email: $('#Email').val(),
            Diachi: $('#Email').val(),
            noidungphu: $('#noidungphu').val(),
            cartItemsInput: cartItems
        };
        //alert(cartItems)
        localStorage.removeItem("cartItems");
        updateCartList();
        $.ajax({
            url: '/Cart/CreateForGuestMultiOrder',
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(data),
            success: function (response) {
                if (response.success) {
                    alert("Ok");
                }
            },
            error: function (xhr, status, error) {
                if (xhr.responseText != "") {
                    var err = JSON.parse(xhr.responseText);
                    if (err.status == 440) {
                        alert("Session expired");
                    }
                    else {
                        alert(err.message);
                    }
                }
                else {
                    alert("Crash");
                }
            }
        });
        alert("Đặt hàng thành công tạm");


    }
    function submitFormAuthen() {
        var cartItems = localStorage.getItem("cartItems");
        var data = {
            Tenkh: $('#Tenkh').val(),
            Sdt: $('#Sdt').val(),
            Email: $('#Email').val(),
            Diachi: $('#Email').val(),
            noidungphu: $('#noidungphu').val(),
            cartItemsInput: cartItems
        };
        alert(cartItems)
        localStorage.removeItem("cartItems");
        updateCartList();
        $.ajax({
            url: '/Cart/CreateForGuestMultiOrderAuthen',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(data),
            success: function (response) {

                if (response.status == 200) {
                    localStorage.removeItem("cartItems");
                    updateCartList();

                    alert("Đặt hàng thành công");
                } else {
                    alert("Đặt hàng thất bại SSSSS");

                }
            },
            error: function (xhr, status, error) {
                // Xử lý lỗi
                alert("Đặt hàng thất bại");

            }
        });
        alert("Đặt hàng thành công tạm");


    }
</script>
